{"version":3,"sources":["components/AddUser.jsx","components/ColFilter.jsx","components/DisplayUsers.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddUser","React","useState","name","setName","age","setAge","email","setEmail","gender","setGender","submitHandler","event","a","preventDefault","user","axios","post","resp","alert","data","onSubmit","type","onChange","e","target","value","required","ColFilter","column","filterValue","setFilter","DisplayUsers","users","setUsers","useEffect","get","then","map","val","isHidden","useMemo","columns","Header","accessor","Filter","tableInstance","useTable","useFilters","usePagination","getTableProps","getTableBodyProps","headerGroups","page","state","nextPage","previousPage","canPreviousPage","canNextPage","setPageSize","prepareRow","pageSize","style","border","headerGroup","getHeaderGroupProps","headers","getHeaderProps","borderBottom","background","color","fontWeight","render","canFilter","row","getRowProps","cells","cell","getCellProps","padding","onClick","disabled","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e233f65.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const AddUser = () => {\r\n    const [name,setName] = React.useState(\"\");\r\n    const [age,setAge] = React.useState(\"\");\r\n    const [email,setEmail] = React.useState(\"\");\r\n    const [gender,setGender] = React.useState(\"\");\r\n\r\n    const submitHandler = async (event) =>{\r\n        event.preventDefault();\r\n        const url='https://test-server-mern.herokuapp.com/addUser';\r\n        let user = {\r\n            name,\r\n            age,\r\n            email,\r\n            gender\r\n        };\r\n        \r\n        const resp = await axios.post(url,user);\r\n        alert(resp.data+\" Refresh to see changes....\");\r\n    }\r\n   \r\n    return (\r\n        \r\n            <form onSubmit={submitHandler}>\r\n               <h1>Hello</h1>\r\n               <p>Enter your name:</p>\r\n               <input type=\"text\" onChange={(e)=>setName(e.target.value)} required/>\r\n               <p>Enter your age:</p>\r\n               <input type=\"text\" onChange={(e)=>setAge(e.target.value)} required/>\r\n               <p>Enter your email:</p>\r\n               <input type=\"email\" onChange={(e)=>setEmail(e.target.value)} required/>\r\n               <p>Enter your gender:</p>\r\n               <input type=\"text\" onChange={(e)=>setGender(e.target.value)} required/>\r\n               <input type =\"submit\"/>\r\n            </form>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const ColFilter = ({ column }) => {\r\n  const { filterValue, setFilter } = column\r\n  return (\r\n    <span>\r\n      \r\n      <input\r\n        value={filterValue || ''}\r\n        onChange={e => setFilter(e.target.value)}\r\n      />\r\n    </span>\r\n  )\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport './displayUsers.css'\r\nimport { ColFilter } from './ColFilter'\r\nimport { useTable ,useFilters,usePagination } from 'react-table'\r\n\r\nexport const DisplayUsers = () => {\r\n    const [users ,setUsers] = React.useState([]);  \r\n    const url ='https://test-server-mern.herokuapp.com/getUsers'\r\n    React.useEffect(()=>{\r\n        axios.get(url).then((resp)=>{\r\n            const data = resp.data;\r\n            data.map((val=>val.isHidden=false));\r\n            setUsers(data);\r\n        \r\n        })},[]);\r\n    const data = React.useMemo(\r\n   () => users,\r\n   [users]\r\n )\r\n    const columns = React.useMemo(\r\n   () => [\r\n     {\r\n       Header: 'Name',\r\n       accessor: 'name', // accessor is the \"key\" in the data\r\n       Filter: ColFilter\r\n     },\r\n     {\r\n       Header: 'Age',\r\n       accessor: 'age',\r\n       Filter: ColFilter\r\n     },\r\n     {\r\n       Header: 'Email',\r\n       accessor: 'email',\r\n       Filter: ColFilter\r\n     },\r\n     {\r\n       Header: 'Gender',\r\n       accessor: 'gender',\r\n       Filter: ColFilter\r\n     }\r\n   ],\r\n   [users]\r\n )\r\n const tableInstance = useTable({ columns, data },useFilters,usePagination);\r\n const {\r\n   getTableProps,\r\n   getTableBodyProps,\r\n   headerGroups,\r\n   page,\r\n   state,\r\n   nextPage,\r\n   previousPage,\r\n   canPreviousPage,\r\n   canNextPage,\r\n   setPageSize,\r\n   prepareRow,\r\n } = tableInstance;\r\n    const { pageSize } = state\r\n    return (\r\n        <>\r\n        <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\r\n       <thead>\r\n           \r\n         {headerGroups.map(headerGroup => (\r\n           <tr {...headerGroup.getHeaderGroupProps()}>\r\n             {headerGroup.headers.map(column => (\r\n               <th\r\n                 {...column.getHeaderProps()}\r\n                 style={{\r\n                   borderBottom: 'solid 3px red',\r\n                   background: 'aliceblue',\r\n                   color: 'black',\r\n                   fontWeight: 'bold',\r\n                 }}\r\n               >\r\n                 {column.render('Header')}\r\n                  <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n               </th>\r\n             ))}\r\n           </tr>\r\n         ))}\r\n       </thead>\r\n       <tbody {...getTableBodyProps()}>\r\n         {page.map(row => {\r\n           prepareRow(row)\r\n           return (\r\n             <tr {...row.getRowProps()}>\r\n               {row.cells.map(cell => {\r\n                 return (\r\n                   <td\r\n                     {...cell.getCellProps()}\r\n                     style={{\r\n                       padding: '10px',\r\n                       border: 'solid 1px gray',\r\n                       background: 'papayawhip',\r\n                     }}\r\n                   >\r\n                     {cell.render('Cell')}\r\n                   </td>\r\n                 )\r\n               })}\r\n             </tr>\r\n           )\r\n         })}\r\n       </tbody>\r\n     </table>\r\n     <div>\r\n         <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          Previous\r\n        </button>\r\n        <button onClick={() => nextPage()} disabled={!canNextPage} >\r\n          Next\r\n        </button>\r\n       Page Size: <input type=\"number\" onChange={(e)=>setPageSize(e.target.value)}></input>\r\n     </div>\r\n     </>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport { AddUser } from './components/AddUser';\nimport { DisplayUsers } from './components/DisplayUsers';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AddUser/>\n      <DisplayUsers/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}